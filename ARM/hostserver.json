{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": { "commonSettings": { "type": "object" } },
    "variables": {
        "nlbname": "[concat('loadbalancer-', 'hostserver', '-', parameters('commonSettings').tenantName)]",
        "nlbid": "[resourceId('Microsoft.Network/loadBalancers', variables('nlbname'))]",
        "storageAccountPrefix": [ "a", "g", "m", "s", "y" ],
        "storageAccountNameSuffix": "[concat(toLower(replace(parameters('commonSettings').tenantName,'-','')), 'host')]"
    },
    "resources": [
        {
            "type": "Microsoft.Network/loadBalancers",
            "name": "[variables('nlbname')]",
            "location": "[resourceGroup().location]",
            "apiVersion": "[parameters('commonSettings').constants.apiVersions.loadBalancers]",
            "properties": {
                "frontendIPConfigurations": [
                    {
                        "name": "myLoadBalancerFrontEnd",
                        "properties": {
                            "publicIPAddress": {
                                "id": "[parameters('commonSettings').ipAddressId.hostserver]"
                            }
                        }
                    }
                ],
                "backendAddressPools": [
                    {
                        "name": "[concat('hostserver', '-', 'backendAddressPool')]"
                    }
                ],
                "probes": [
                    {
                        "name": "probe-http",
                        "properties": {
                            "protocol": "Http",
                            "port": 80,
                            "intervalInSeconds": 5,
                            "numberOfProbes": 2,
                            "requestPath": "/"
                        }
                    }
                ],
                "loadBalancingRules": [
                    {
                        "name": "nlb-rule-http",
                        "properties": {
                            "protocol": "Tcp",
                            "frontendPort": 80,
                            "backendPort": 80,
                            "enableFloatingIP": false,
                            "idleTimeoutInMinutes": 5,
                            "loadDistribution": "SourceIPProtocol",
                            "probe": { "id": "[concat(variables('nlbid'), '/probes/', 'probe-http')]" },
                            "frontendIPConfiguration": { "id": "[concat(variables('nlbid'), '/frontendIPConfigurations/', 'myLoadBalancerFrontEnd')]" },
                            "backendAddressPool": { "id": "[concat(variables('nlbid'), '/backendAddressPools/', concat('hostserver', '-', 'backendAddressPool'))]" }
                        }
                    },
                    {
                        "name": "nlb-rule-https",
                        "properties": {
                            "protocol": "Tcp",
                            "frontendPort": 443,
                            "backendPort": 443,
                            "enableFloatingIP": false,
                            "idleTimeoutInMinutes": 5,
                            "loadDistribution": "SourceIPProtocol",
                            "probe": { "id": "[concat(variables('nlbid'), '/probes/', 'probe-http')]" },
                            "frontendIPConfiguration": { "id": "[concat(variables('nlbid'), '/frontendIPConfigurations/', 'myLoadBalancerFrontEnd')]" },
                            "backendAddressPool": { "id": "[concat(variables('nlbid'), '/backendAddressPools/', concat('hostserver', '-', 'backendAddressPool'))]" }
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "[parameters('commonSettings').constants.apiVersions.storageAccounts]",
            "location": "[resourceGroup().location]",
            "name": "[concat(variables('storageAccountPrefix')[copyIndex()], variables('storageAccountNameSuffix'))]",
            "tags": { "displayName": "Storage Accounts - VM ScaleSet - hostserver" },
            "copy": {
                "name": "vmssstorageLoop",
                "count": "[length(variables('storageAccountPrefix'))]"
            },
            "properties": { "accountType": "Standard_LRS" }
        },
        {
            "type": "Microsoft.Compute/virtualMachineScaleSets",
            "apiVersion": "[parameters('commonSettings').constants.apiVersions.virtualMachineScaleSets]",
            "location": "[resourceGroup().location]",
            "name": "[concat('vmss-', parameters('commonSettings').tenantName, '-', 'hostserver')]",
            "dependsOn": [
                "[concat('Microsoft.Network/loadBalancers/', variables('nlbname'))]",
                "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountPrefix')[0], variables('storageAccountNameSuffix'))]",
                "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountPrefix')[1], variables('storageAccountNameSuffix'))]",
                "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountPrefix')[2], variables('storageAccountNameSuffix'))]",
                "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountPrefix')[3], variables('storageAccountNameSuffix'))]",
                "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountPrefix')[4], variables('storageAccountNameSuffix'))]"
            ],
            "sku": {
                "name": "[parameters('commonSettings').vm.size.hostserver]",
                "tier": "Standard",
                "capacity": "[parameters('commonSettings').hostserverInstanceCount]"
            },
            "tags": { "displayName": "Virtual Machine ScaleSet" },
            "properties": {
                "upgradePolicy": {
                    "mode": "Automatic"
                },
                "virtualMachineProfile": {
                    "storageProfile": {
                        "osDisk": {
                            "name": "VMSSOsDisk",
                            "caching": "ReadWrite",
                            "createOption": "FromImage",
                            "vhdContainers": [
                                "[concat('https://', variables('storageAccountPrefix')[0], variables('storageAccountNameSuffix'), '.', parameters('commonSettings').environment.blobEndpoint, '/vmss')]",
                                "[concat('https://', variables('storageAccountPrefix')[1], variables('storageAccountNameSuffix'), '.', parameters('commonSettings').environment.blobEndpoint, '/vmss')]",
                                "[concat('https://', variables('storageAccountPrefix')[2], variables('storageAccountNameSuffix'), '.', parameters('commonSettings').environment.blobEndpoint, '/vmss')]",
                                "[concat('https://', variables('storageAccountPrefix')[3], variables('storageAccountNameSuffix'), '.', parameters('commonSettings').environment.blobEndpoint, '/vmss')]",
                                "[concat('https://', variables('storageAccountPrefix')[4], variables('storageAccountNameSuffix'), '.', parameters('commonSettings').environment.blobEndpoint, '/vmss')]"
                            ]
                        },
                        "imageReference": {
                            "publisher": "[parameters('commonSettings').vm.images.standard.publisher]",
                            "offer": "[parameters('commonSettings').vm.images.standard.offer]",
                            "sku": "[parameters('commonSettings').vm.images.standard.sku]",
                            "version": "[parameters('commonSettings').vm.images.standard.version]"
                        }
                    },
                    "osProfile": {
                        "computerNamePrefix": "hostserver",
                        "adminUsername": "[parameters('commonSettings').adminUsername]",
                        "linuxConfiguration": {
                            "disablePasswordAuthentication": "true",
                            "ssh": {
                                "publicKeys": [
                                    {
                                        "path": "[concat('/home/', parameters('commonSettings').adminUsername, '/.ssh/authorized_keys')]",
                                        "keyData": "[parameters('commonSettings').adminSecureShellKey]"
                                    }
                                ]
                            }
                        }
                    },
                    "networkProfile": {
                        "networkInterfaceConfigurations": [
                            {
                                "name": "vmssnic",
                                "properties": {
                                    "primary": true,
                                    "ipConfigurations": [
                                        {
                                            "name": "myVirtualMachineScaleSetIpConfiguration",
                                            "properties": {
                                                "subnet": { "id": "[concat(resourceId('Microsoft.Network/virtualNetworks', parameters('commonSettings').vnet.name), '/subnets/', parameters('commonSettings').vnet.subnet.hostserver.name)]" },
                                                "loadBalancerBackendAddressPools": [ { "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('nlbname')), '/backendAddressPools/', concat('hostserver', '-', 'backendAddressPool'))]" } ]
                                            }
                                        }
                                    ]
                                }
                            }
                        ]
                    },
                    "extensionProfile": {
                        "extensions": [
                            {
                                "name": "CustomScriptExtensionVMSS",
                                "properties": {
                                    "publisher": "Microsoft.OSTCExtensions",
                                    "type": "CustomScriptForLinux",
                                    "typeHandlerVersion": "1.4",
                                    "autoUpgradeMinorVersion": false,
                                    "settings": {
                                        "fileUris": [
                                            "[concat(parameters('commonSettings').repositoryUrl ,'ARM/scripts/install-hostserver.sh')]"
                                        ],
                                        "commandToExecute": "[concat('bash install-hostserver.sh', ' ', parameters('commonSettings').ipAddressValues.hostserver.ip, ' ', parameters('commonSettings').ipAddressValues.hostserver.fqdn, ' ', parameters('commonSettings').ipAddressValues.regserver.ip, ' ', parameters('commonSettings').ipAddressValues.regserver.fqdn, ' ', parameters('commonSettings').ipAddressValues.webportal.ip, ' ', parameters('commonSettings').ipAddressValues.webportal.fqdn)]"
                                    }
                                }
                            }
                        ]
                    }
                }
            }
        }
    ]
}