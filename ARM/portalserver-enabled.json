{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": { "commonSettings": { "type": "object" } },
    "variables": {
        "nlbname": "[concat('loadbalancer-', 'webportal', '-', parameters('commonSettings').tenantName)]",
        "nlbid": "[resourceId('Microsoft.Network/loadBalancers', variables('nlbname'))]",
        "storageAccountPrefix": [ "a", "g", "m", "s", "y" ],
        "storageAccountPrefixModulo": [ "a", "g", "m", "s", "y", "a", "g", "m", "s", "y", "a", "g", "m", "s", "y" ],
        "storageAccountNameSuffix": "[concat(toLower(replace(parameters('commonSettings').tenantName,'-','')), 'web')]"
    },
    "resources": [
        {
            "type": "Microsoft.Network/loadBalancers",
            "name": "[variables('nlbname')]",
            "location": "[resourceGroup().location]",
            "apiVersion": "[parameters('commonSettings').constants.apiVersions.loadBalancers]",
            "properties": {
                "frontendIPConfigurations": [
                    {
                        "name": "myLoadBalancerFrontEnd",
                        "properties": {
                            "publicIPAddress": {
                                "id": "[parameters('commonSettings').ipAddressId.webportal]"
                            }
                        }
                    }
                ],
                "backendAddressPools": [
                    {
                        "name": "[concat('webportal', '-', 'backendAddressPool')]"
                    }
                ],
                "probes": [
                    {
                        "name": "probe-http",
                        "properties": {
                            "protocol": "Http",
                            "port": 80,
                            "intervalInSeconds": 5,
                            "numberOfProbes": 2,
                            "requestPath": "/"
                        }
                    }
                ],
                "loadBalancingRules": [
                    {
                        "name": "nlb-rule-http",
                        "properties": {
                            "protocol": "Tcp",
                            "frontendPort": 80,
                            "backendPort": 80,
                            "enableFloatingIP": false,
                            "loadDistribution": "SourceIPProtocol",
                            "idleTimeoutInMinutes": 5,
                            "probe": { "id": "[concat(variables('nlbid'), '/probes/', 'probe-http')]" },
                            "frontendIPConfiguration": { "id": "[concat(variables('nlbid'), '/frontendIPConfigurations/', 'myLoadBalancerFrontEnd')]" },
                            "backendAddressPool": { "id": "[concat(variables('nlbid'), '/backendAddressPools/', concat('webportal', '-', 'backendAddressPool'))]" }
                        }
                    },
                    {
                        "name": "nlb-rule-https",
                        "properties": {
                            "protocol": "Tcp",
                            "frontendPort": 443,
                            "backendPort": 443,
                            "enableFloatingIP": false,
                            "loadDistribution": "SourceIPProtocol",
                            "idleTimeoutInMinutes": 5,
                            "probe": { "id": "[concat(variables('nlbid'), '/probes/', 'probe-http')]" },
                            "frontendIPConfiguration": { "id": "[concat(variables('nlbid'), '/frontendIPConfigurations/', 'myLoadBalancerFrontEnd')]" },
                            "backendAddressPool": { "id": "[concat(variables('nlbid'), '/backendAddressPools/', concat('webportal', '-', 'backendAddressPool'))]" }
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "[parameters('commonSettings').constants.apiVersions.storageAccounts]",
            "location": "[resourceGroup().location]",
            "name": "[concat(variables('storageAccountPrefix')[copyIndex()], variables('storageAccountNameSuffix'))]",
            "tags": { "displayName": "Storage Accounts - VM ScaleSet - WebPortal" },
            "copy": {
                "name": "vmssstorageLoop",
                "count": "[length(variables('storageAccountPrefix'))]"
            },
            "properties": { "accountType": "Standard_LRS" }
        },
        {
            "copy": {
                "name": "portalServerNicCopy",
                "count": "[parameters('commonSettings').portalServerInstanceCount]"
            },
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "[parameters('commonSettings').constants.apiVersions.networkInterfaces]",
            "location": "[resourceGroup().location]",
            "name": "[concat('nic-portalserver-', copyIndex())]",
            "tags": { "displayName": "Portal Server - Network Interface Card" },
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig-webportal",
                        "properties": {
                            "privateIPAllocationMethod": "Static",
                            "privateIPAddress": "[concat(parameters('commonSettings').vnet.subnet.webportal.addressRangePrefix, '.', copyIndex(10))]",
                            "subnet": { "id": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/virtualNetworks/', parameters('commonSettings').vnet.name, '/subnets/', parameters('commonSettings').vnet.subnet.webportal.name)]" },
                            "loadBalancerBackendAddressPools": [ { "id": "[concat(variables('nlbid'), '/backendAddressPools/', concat('webportal', '-', 'backendAddressPool'))]" } ]
                        }
                    }
                ]
            }
        },

        {
            "copy": {
                "name": "webportalVmCopy",
                "count": "[parameters('commonSettings').portalServerInstanceCount]"
            },
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "[parameters('commonSettings').constants.apiVersions.virtualMachines]",
            "location": "[resourceGroup().location]",
            "name": "[concat(parameters('commonSettings').tenantName, '-vm-webportal-', copyIndex())]",
            "tags": { "displayName": "webportal - Virtual Machine" },
            "dependsOn": [
                "[concat('Microsoft.Storage/storageAccounts/', concat(parameters('commonSettings').tenantName, 'webportalos'))]",
                "[concat('Microsoft.Storage/storageAccounts/', concat(parameters('commonSettings').tenantName, 'webportaldata'))]",
                "[concat('Microsoft.Network/networkInterfaces/', concat('nic-webportal-', copyIndex()))]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('commonSettings').vm.size.webportal]"
                },
                "osProfile": {
                    "computerName": "[concat('webportal-', copyIndex())]",
                    "adminUsername": "[parameters('commonSettings').adminUsername]",
                    "linuxConfiguration": {
                        "disablePasswordAuthentication": "true",
                        "ssh": {
                            "publicKeys": [
                                {
                                    "path": "[concat('/home/', parameters('commonSettings').adminUsername, '/.ssh/authorized_keys')]",
                                    "keyData": "[parameters('commonSettings').adminSecureShellKey]"
                                }
                            ]
                        }
                    }
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[parameters('commonSettings').vm.images.standard.publisher]",
                        "offer": "[parameters('commonSettings').vm.images.standard.offer]",
                        "sku": "[parameters('commonSettings').vm.images.standard.sku]",
                        "version": "[parameters('commonSettings').vm.images.standard.version]"
                    },
                    "osDisk": {
                        "name": "[concat(parameters('commonSettings').tenantName, '-webportal-osdisk-', copyIndex())]",
                        "vhd": {
                            "uri": "[concat('http://', concat(parameters('commonSettings').tenantName, 'webportalos'), '.', parameters('commonSettings').environment.blobEndpoint, '/vhds/webportal-osdisk-', copyIndex(), '.vhd') ]"
                        },
                        "caching": "ReadWrite",
                        "createOption": "FromImage"
                    },
                    "dataDisks": [
                        {
                            "name": "[concat('sql-data-vm-', copyIndex(), '-lun0')]",
                            "diskSizeGB": "50",
                            "lun": 0,
                            "vhd": {
                                "uri": "[concat('http://', concat(parameters('commonSettings').tenantName, 'webportaldata'), '.', parameters('commonSettings').environment.blobEndpoint, '/vhds/webportal-datadisk-vm', copyIndex(), '-lun0.vhd') ]"
                            },
                            "caching": "ReadOnly",
                            "createOption": "Empty"
                        },
                        {
                            "name": "[concat('sql-data-vm-', copyIndex(), '-lun1')]",
                            "diskSizeGB": "50",
                            "lun": 1,
                            "vhd": {
                                "uri": "[concat('http://', concat(parameters('commonSettings').tenantName, 'webportaldata'), '.', parameters('commonSettings').environment.blobEndpoint, '/vhds/webportal-datadisk-vm', copyIndex(), '-lun1.vhd') ]"
                            },
                            "caching": "ReadOnly",
                            "createOption": "Empty"
                        }
                    ]
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat('nic-portalserver-', copyIndex()))]"
                        }
                    ]
                }
            }
        },
        {
            "copy": {
                "name": "webportalVmExtensionCopy",
                "count": "[parameters('commonSettings').portalServerInstanceCount]"
            },
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "apiVersion": "[parameters('commonSettings').constants.apiVersions.virtualMachines]",
            "name": "[concat(parameters('commonSettings').tenantName, '-vm-webportal-', copyIndex(), '/customScriptExtension')]",
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/', concat(parameters('commonSettings').tenantName, '-vm-webportal-', copyIndex()))]"
            ],
            "location": "[resourceGroup().location]",
            "properties": {
                "publisher": "Microsoft.OSTCExtensions",
                "type": "CustomScriptForLinux",
                "typeHandlerVersion": "1.4",
                "autoUpgradeMinorVersion": false,
                "settings": {
                    "fileUris": [
                        "[concat(parameters('commonSettings').repositoryUrl ,'ARM/scripts/install-webportal.sh')]"
                    ],
                    "commandToExecute": "[concat('bash install-webportal.sh', ' ', parameters('commonSettings').ipAddressValues.hostserver.ip, ' ', parameters('commonSettings').ipAddressValues.hostserver.fqdn, ' ', parameters('commonSettings').ipAddressValues.regserver.ip, ' ', parameters('commonSettings').ipAddressValues.regserver.fqdn, ' ', parameters('commonSettings').ipAddressValues.webportal.ip, ' ', parameters('commonSettings').ipAddressValues.webportal.fqdn)]"
                }
            }
        }
    ]
}